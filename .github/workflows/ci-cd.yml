name: ci-cd

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/1000ju/stocker_node
          tags: |
            type=raw,value=latest
            type=sha,format=short,prefix=main-

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: 1000ju
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- 추가: 배포 전 SSH 포트 도달성 체크 ---
      - name: Check SSH reachability
        run: |
          H="${{ secrets.SSH_HOST }}"; P="${{ secrets.SSH_PORT || 22 }}"
          timeout 5 bash -lc "echo > /dev/tcp/$H/$P" && echo "TCP $P open" || (echo "TCP $P blocked"; exit 1)

      # --- 수정: SSH 배포(포트/패스프레이즈/디버그 명시) ---
      - name: Deploy (SSH)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }} # -----BEGIN OPENSSH PRIVATE KEY----- ...
          port: ${{ secrets.SSH_PORT || 22 }} # 비표준 포트면 Secrets에 SSH_PORT 추가
          passphrase: ${{ secrets.SSH_PASSPHRASE || '' }}
          script_stop: true
          debug: true
          timeout: "60s"
          command_timeout: "15m"
          script: |
            set -e
            cd ~/app/stocker_node-develop
            docker compose --env-file ./.env.production pull app
            docker compose --env-file ./.env.production up -d
            docker image prune -f
